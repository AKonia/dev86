Here's a short list of bits that are required.  If you want to do one of 
these it's probably best to post to the list <linux-8086@vger.rutgers.edu>.

Add more to this todo list!


TODO for libc-8086:
Item                            Notes
---------------------------------------------------------------------------
Floating Point          - BUT note there may need to be kernel support.  Also,
			BCC doesn't do it properly right now...
Header Files            - This will take some time, also some files should
                                 be kernel.
Stdio                   - Joel is on this. (stdio1) (RDB stdio2)
dirent   &co            - Directory listing - Partial.
getgrent &co            - Nat -Done
getpwent &co            - Nat -Done
utmp/wtmp		- Nat -Done
hsearch  &co		-
tsearch  &co		-
locale processing       - multi national, unicode (string stuff has a couple
                                of stubs)
login                   - getpass and friends - [I'll just dump the tiny-login
			getpass code in -Nat]
rpc                     - 
setjmp                  - Done, Rob
syslog   &co            - make stubs to splatter to console.
time calcs              - mktime gmtime localtime etc
timezone                - Probably V simplistic, List of UTC's
                                offsets & STDvDST
shadow password         - Do we need ? Do we want :-) [No! Ick! ;) -Nat]
termcap                 - and curses; what does ncurses need ?  (150kb!!)
crypt			- glibc/crypt ? Use TEA?
signal stuff            - Got a basic 'signal' appears to work correctly.
getenv/setenv		- Done
bsearch                 - Grabbed (Public Domain)
lsearch                 - Grabbed (Public Domain)
random numbers		- Got ZX81 version (better than some) (And 2nd now)
math			- Until BCC can handle 16 bit FP properly, this is
			probably on hold..
dual-platform build
environment		- This will be a gradual process, I imagine.

Other projects:
Project                         Notes
---------------------------------------------------------------------------
Optimiser for BCC       - A lot of work, but lucrative.
Tiny vi editor          - Use 'ae' ?
Shells: Bourne, Csh, 
menu, silly             - ash with proper compile-time options. . . ?
Tiny Perl               - :-) :-) You first ;)
User commands           - Everything in /bin /usr/bin - will existing PD/GPL
                                compile in 16 bit ? Or do smaller ones exist,
                                need to written ?
